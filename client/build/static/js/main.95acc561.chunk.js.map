{"version":3,"sources":["API.js","components/Banner/index.js","components/SearchForm/index.js","components/Card/index.js","components/Book/index.js","components/List/index.js","pages/home.js","pages/saved.js","components/Header/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getBooks","q","axios","get","catch","err","console","log","getSavedBooks","deleteBook","id","delete","saveBook","bookData","post","Banner","react_default","a","createElement","className","SearchForm","_ref","handleInputChange","handleFormSubmit","placeholder","value","name","onChange","required","type","onClick","Card","icon","title","children","concat","aria-hidden","Book","subtitle","authors","link","description","image","Button","src","alt","target","rel","href","List","ListItem","_ref2","Home","state","books","message","event","_event$target","_this","setState","Object","defineProperty","preventDefault","then","res","data","items","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","alert","_this2","this","components_Banner","components_SearchForm","components_Card","length","List_List","map","key","components_Book","Component","Saved","handleBookDelete","_id","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","window","location","pathname","App","react_router_dom","components_Header","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.95acc561.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getBooks: function (q) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + q)\n      .catch(err => console.log(err));\n  },\n  getSavedBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  saveBook: function (bookData) {\n    console.log(bookData)\n    return axios.post(\"/api/books\", bookData)\n      .catch(err => console.log(err))\n  }\n};\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Banner() {\n    return <div id=\"banner\" className=\"jumbotron\">\n        <div>\n            <h1>Google Books Search</h1>\n        </div>\n    </div>\n}\n\nexport default Banner;","\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction SearchForm({ q, handleInputChange, handleFormSubmit }) {\n    return (\n        <div>\n            <form id=\"searchForm\" className=\"form-group\">\n                <h1>Search By Title</h1>\n                <input className=\"form-control\" placeholder=\"Title\" value={q} name=\"q\" onChange={handleInputChange} required ></input>\n                <button id=\"submitBtn\" className=\"btn btn-success\" type=\"submit\" onClick={handleFormSubmit}>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchForm;","import React from \"react\";\nimport \"../Card/style.css\"\nfunction Card({ icon, title, children }) {\n  return (\n    <div id=\"results\" className=\"card mt-4 text-white bg-dark\" >\n      <div className=\"card-header\">\n        <h3>\n          <strong>\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\n          </strong>\n        </h3>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div >\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\n  return (\n    <div>\n      <h3 className=\"font-italic\">{title}</h3>\n      {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\n      <div className=\"btn-container\">\n        <p className=\"font-italic small\">Written by {authors}</p>\n        <img className=\"img-thumbnailw-100\" src={image} alt={title} />\n        <p>{description}</p>\n        <Button />\n        <a className=\"btn btn-warning\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n          View\n            </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Book;\n","import React from \"react\";\nimport \"./style.css\";\n\nexport const List = ({ children }) => (\n  <ul className=\"list-group\">\n    {children}\n  </ul>\n);\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React, { Component } from \"react\";\nimport API from \"../API.js\";\nimport Banner from \"../components/Banner\";\nimport SearchForm from \"../components/SearchForm\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport { List, ListItem } from \"../components/List\";\nclass Home extends Component {\n    state = {\n        books: [],\n        q: \"\",\n        message: \"Search For A Book!\"\n    };\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n\n    };\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.getBooks();\n    };\n    getBooks = () => {\n        API.getBooks(this.state.q)\n            .then(res =>\n                this.setState({\n                    books: res.data.items\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    books: [],\n                    message: \"No books found.\"\n                })\n            );\n    };\n    handleBookSave = id => {\n        const book = this.state.books.find(book => book.id === id);\n\n        API.saveBook({\n            googleId: book.id,\n            title: book.volumeInfo.title,\n            subtitle: book.volumeInfo.subtitle ? book.volumeInfo.subtitle : \"No subtitle available\",\n            link: book.volumeInfo.infoLink,\n            authors: book.volumeInfo.authors ? book.volumeInfo.authors : \"No authors available.\",\n            description: book.volumeInfo.description ? book.volumeInfo.description : \"No description available.\",\n            image: book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : \"No thumbnail available.\"\n        }).then(() => this.getBooks())\n        .then(() => alert(\"Book saved!\"))\n    };\n    render() {\n        return (\n            <div>\n                <Banner />\n                <SearchForm\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                    q={this.state.q}\n                />\n                <Card title=\"Results\">\n                    {this.state.books.length ? (\n                        <List>\n                            {this.state.books.map(book => (\n                                <ListItem key={book.id}>\n                                    <Book\n                                        key={book.id} \n                                        title={book.volumeInfo.title ? book.volumeInfo.title : \"No title available.\"}\n                                        subtitle={book.volumeInfo.subtitle}\n                                        link={book.volumeInfo.infoLink}\n                                        authors={book.volumeInfo.authors ? book.volumeInfo.authors : \"No authors available.\"}\n                                        description={book.volumeInfo.description ? book.volumeInfo.description : \"No description available.\"}\n                                        image={book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : \"No image available.\"}\n                                        Button={() => (\n                                            <button\n                                                onClick={() => this.handleBookSave(book.id)}\n                                                className=\"btn btn-success\"> Save</button>\n                                        )}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    ) : (\n                            <h2 className=\"text-center\">{this.state.message}</h2>\n                        )}\n                </Card>\n            </div>\n        )\n    }\n}\nexport default Home;","import React, { Component } from \"react\";\nimport Banner from \"../components/Banner\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport API from \"../API\";\nimport { List, ListItem } from \"../components/List\";\nclass Saved extends Component {\n    state = {\n        books: [],\n        message: \"You have no saved books.\"\n    }\n\n    componentDidMount() {\n        this.getSavedBooks();\n    }\n\n    getSavedBooks = () => {\n        API.getSavedBooks()\n            .then(res =>\n                this.setState({\n                    books: res.data\n                })\n            )\n            .catch(err => console.log(err));\n    };\n    handleBookDelete = id => {\n        API.deleteBook(id).then(res => this.getSavedBooks());\n      };\n    render() {\n        return (\n            <div>\n                <Banner />\n                <Card title=\"Saved Books\">\n                    {this.state.books.length ? (\n                        <List>\n                            {this.state.books.map(book => (\n                                <ListItem key={book._id}>\n                                    <Book\n                                        key={book._id}\n                                        title={book.title}\n                                        subtitle={book.subtitle}\n                                        link={book.link}\n                                        authors={book.authors}\n                                        description={book.description}\n                                        image={book.image}\n                                        Button={() => (\n                                            <button\n                                                onClick={() => this.handleBookDelete(book._id)}\n                                                className=\"btn btn-danger ml-2\">Delete</button>\n                                        )}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    ) : (\n                            <h2 className=\"text-center\">{this.state.message}</h2>\n                        )}\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Saved;","\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"} href=\"/\">Home</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"} href=\"saved\">Saved</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport Saved from \"./pages/saved\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/saved\" component={Saved} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}